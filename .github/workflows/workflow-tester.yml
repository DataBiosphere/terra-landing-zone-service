# Workflow for testing new actions and workflows
#
# Github does not provide a way to run workflows that are not already merged to the
# default branch. Once a workflow that is configured for manual running is merged,
# then when you change it in a branch and execute your changes.
#
# The purpose of this workflow is to be a scratch space for developing workflows.
# Use it to prepare a workflow. When it is ready, you can copy the file to the
# proper name and merge from there.

name: Workflow Tester
on:
  workflow_dispatch: {}

jobs:
  bump-check:
    runs-on: ubuntu-latest
    outputs:
      is-bump: ${{ steps.skiptest.outputs.is-bump }}
    steps:
      - uses: actions/checkout@v2
      - name: Skip version bump merges
        id: skiptest
        uses: ./.github/actions/bump-skip
        with:
          event-name: ${{ github.event_name }}

  build:
    needs: [ bump-check ]
    runs-on: ubuntu-latest
    if: needs.bump-check.outputs.is-bump == 'no'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build the test harness and, by dependency, the service library
        run: ./gradlew --build-cache build -x test

      - name: Upload spotbugs results
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: service/build/reports/spotbugs/main.sarif

  tests-and-sonarqube:
    needs: [ bump-check, build ]
    runs-on: ubuntu-latest
    if: needs.bump-check.outputs.is-bump == 'no'

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
        # Needed by sonar to get the git history for the branch the PR will be merged into.
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: initialize the database
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -f ./scripts/postgres-init.sql

      - name: Test with coverage
        run: ./gradlew --build-cache testharness:test jacocoTestReport --scan

      # The SonarQube scan is done here, so it can upload the coverage report generated by the tests.
      - name: SonarQube scan
        run: ./gradlew --build-cache sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-slack:
    needs: [ bump-check, build, tests-and-sonarqube ]
    runs-on: ubuntu-latest
    steps:
      - name: "Notify WSM Slack"
        # post to WSM Slack when a regular push (i.e. non-bumper push) is made to main branch
        if: always() && github.event_name == 'push' && needs.bump-check.outputs.is-bump == 'no'
        uses: broadinstitute/action-slack@v3.8.0
        # see https://github.com/broadinstitute/action-slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          channel: "#terra-wsm-alerts"
          username: "TPS push to main branch"
          author_name: "build-and-test"
          icon_emoji: ":triangular_ruler:"
          fields: job, commit
