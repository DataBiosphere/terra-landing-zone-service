plugins {
    id 'idea'
    id 'jacoco'
    id 'java'

    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
    id 'org.hidetake.swagger.generator'
}

boolean isGithubAction = System.getenv().containsKey("GITHUB_ACTIONS")

if (!isGithubAction) {
    tasks.withType(JavaExec).configureEach {
        systemProperty 'spring.profiles.include', 'human-readable-logging'
    }
    tasks.withType(Test).configureEach {
        systemProperty 'spring.profiles.include', 'human-readable-logging'
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven {
        // Terra proxy for maven central
        url 'https://broadinstitute.jfrog.io/broadinstitute/maven-central/'
    }
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    compileOnly "com.google.code.findbugs:annotations:3.0.1"
    implementation 'org.slf4j:slf4j-api:1.7.35'
    implementation 'io.swagger.core.v3:swagger-annotations:2.1.12'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.47'

    testImplementation 'ch.qos.logback:logback-classic'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    var openTelemetryVersion = '1.32.0'
    implementation "io.opentelemetry:opentelemetry-api:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-logging:${openTelemetryVersion}"
    implementation "io.opentelemetry.semconv:opentelemetry-semconv:1.21.0-alpha"
    implementation "io.opentelemetry.instrumentation:opentelemetry-spring-webmvc-6.0:${openTelemetryVersion}-alpha"
    implementation "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:${openTelemetryVersion}"
    implementation "io.opentelemetry.instrumentation:opentelemetry-spring-boot:${openTelemetryVersion}-alpha"
    implementation "com.google.cloud.opentelemetry:exporter-trace:0.25.2"

    implementation ('bio.terra:terra-common-lib:0.1.6-SNAPSHOT'){
        exclude group: "org.broadinstitute.dsde.workbench", module: "sam-client_2.13"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

version = gradle.releaseVersion
group = 'bio.terra'

// for scans
if (hasProperty("buildScan")) {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

spotless {
    java {
        targetExclude "${buildDir}/**"
        targetExclude "**/swagger-code/**"
        googleJavaFormat()
    }
}

// Run spotless check when running in github actions, otherwise run spotless apply.
compileJava {
    if (isGithubAction) {
        dependsOn(spotlessCheck)
    } else {
        dependsOn(spotlessApply)
    }
}

// Spotbugs configuration
spotbugs {
    toolVersion = '4.7.0'
    reportLevel = 'high'
    effort = 'max'
}
spotbugsMain {
    reports {
        if (isGithubAction) {
            sarif.enabled = true
        } else {
            html.enabled = true
        }
    }
}
