plugins {
    id 'bio.terra.landingzone.java-spring-library-conventions'
    id 'de.undercouch.download'
    id 'com.google.cloud.tools.jib'
    id 'com.srcclr.gradle'
    id 'org.sonarqube'
    id 'com.jfrog.artifactory'
    id 'org.liquibase.gradle' version '2.2.1'
}

apply from: 'publishing.gradle'

dependencies {
    implementation 'bio.terra:terra-common-lib'
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aop'
    implementation 'org.springframework:spring-aspects'
    //we need to expose it at service module for status checking capability
    api 'org.broadinstitute.dsde.workbench:sam-client_2.13:0.1-6d19a41'
    implementation 'bio.terra:billing-profile-manager-client:0.1.484-SNAPSHOT'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation group: 'com.azure', name: 'azure-core', version: '1.47.0'
    implementation (group: 'com.azure', name: 'azure-identity', version: '1.11.3') {
        // azure-identity is still pulling in an old version of reactor-netty-http
        exclude group: 'io.projectreactor.netty', module: 'reactor-netty-http'
        exclude group: 'io.projectreactor.netty', module: 'reactor-netty-core'
        exclude group: 'io.projectreactor', module: 'reactor-core'
    }
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty-http', version: '1.1.15'
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty-core', version: '1.1.15'
    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.6.2'

    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager', version: '2.36.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-relay', version: '1.0.0-beta.2'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-batch', version: '1.0.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-postgresqlflexibleserver', version: '1.0.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-loganalytics', version: '1.0.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-applicationinsights', version: '1.0.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-securityinsights', version: '1.0.0-beta.4'

    implementation group: "io.kubernetes", name: "client-java", version: "20.0.0-legacy"
    // io.kubernetes:client-java brings in snakeyaml 2.0 which breaks whatever version of liquibase was pulled in before
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.26.0'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.12.3'


    // Terraform experimentation
    implementation 'com.hashicorp:cdktf-provider-azurerm:12.9.0'
    implementation "com.hashicorp:cdktf:0.20.4"
    implementation "software.constructs:constructs:10.1.167"


    liquibaseRuntime 'org.liquibase:liquibase-core:4.26.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'org.postgresql:postgresql:42.7.2'
    liquibaseRuntime 'ch.qos.logback:logback-classic'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'

    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.1.2') {
        // Fixes warning about multiple occurrences of JSONObject on the classpath
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
}

// We use Spring Boot gradle plugin in a non-Spring Boot environment to manage Spring Boot dependency.
// Disable bootJar and enable jar task back since this is actually not a Spring Boot app.
bootJar {
    enabled = false
}

jar {
    enabled = true
}

// Modify the standard :test task to only include unit-tagged and library-tagged tests.
test {
    useJUnitPlatform {
        includeTags "unit", "library"
    }
}

task unitTest(type: Test) {
    useJUnitPlatform {
        includeTags "unit"
    }
    outputs.upToDateWhen { false }
}

// Create a new :integrationTest task to run integration tests. This won't be executed as
// part of the standard `./gradlew build` invocation.
task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    shouldRunAfter test
    // Force tests to always be re-run, since integration tests involve communicating with external
    // resources.
    outputs.upToDateWhen { false }

    testLogging {
        events = ["passed", "failed", "skipped", "started", "standard_out", "standard_error"]
    }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'terra-landing-zone-service'
        property 'sonar.projectKey', 'DataBiosphere_terra-landing-zone-service'
        property 'sonar.organization', 'broad-databiosphere'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

liquibase {
    activities {
        catalog {
            changeLogFile 'src/main/resources/db/changelog.xml'
            url 'jdbc:postgresql://localhost:5432/landingzone_db'
            username 'dbuser'
            password 'dbpwd'
            logLevel 'info'
        }
    }
}
