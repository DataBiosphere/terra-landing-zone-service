dependencies {
    // Version controlled by dependency management plugin
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.glassfish.jersey.core:jersey-client'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson'
    implementation 'org.glassfish.jersey.media:jersey-media-multipart'

    implementation 'io.swagger.core.v3:swagger-annotations'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli'
}

def artifactGroup = "${group}.lz.futureservice"

generateSwaggerCode {
    inputFile = file('../service/src/main/resources/api/service_openapi.yaml')
    language = 'java'
    library = 'jersey2'

    components = [
            apiDocs  : false, apiTests: false,
            modelDocs: false, modelTests: false
    ]

    additionalProperties = [
            modelPackage  : "${artifactGroup}.model",
            apiPackage    : "${artifactGroup}.api",
            invokerPackage: "${artifactGroup}.client",
            dateLibrary   : 'java11',
            java8         : 'true',
            jakarta       : 'true'
    ]

    rawOptions = ['--ignore-file-override', "${projectDir}/.swagger-codegen-ignore"]
}

idea.module.generatedSourceDirs = [file("${generateSwaggerCode.outputDir}/src/main/java")]
sourceSets.main.java.srcDir "${generateSwaggerCode.outputDir}/src/main/java"
compileJava.dependsOn generateSwaggerCode
sourcesJar.dependsOn generateSwaggerCode
//why this is required?
spotlessJava.dependsOn generateSwaggerCode
