plugins {
    id 'bio.terra.landingzone.java-spring-library-conventions'
    id 'de.undercouch.download'
    id 'com.google.cloud.tools.jib'
    id 'com.srcclr.gradle'
    id 'org.sonarqube'
    id 'com.jfrog.artifactory' version '4.18.2'
    id 'org.liquibase.gradle' version '2.1.0'
}

apply from: 'publishing.gradle'

dependencies {
    implementation 'bio.terra:terra-common-lib'
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
    implementation 'org.springframework.retry:spring-retry:1.3.3'
    implementation 'org.broadinstitute.dsde.workbench:sam-client_2.12:0.1-61135c7'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'javax.servlet:jstl:1.2'
    implementation group: 'com.azure', name: 'azure-core', version: '1.24.1'
    implementation group: 'com.azure', name: 'azure-identity', version: '1.4.3'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-compute', version: '2.15.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-containerinstance', version: '2.15.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-msi', version: '2.15.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-relay', version: '1.0.0-beta.1'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-resources', version: '2.15.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-batch', version: '1.0.0'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-postgresql', version: '1.0.2'
    implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager', version: '2.15.0'

    liquibaseRuntime 'org.liquibase:liquibase-core:3.10.0'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql:42.3.3'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.2.3'

    // Spotbugs dependencies
    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
    spotbugs "com.github.spotbugs:spotbugs:${spotbugs.toolVersion.get()}"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    testImplementation 'org.mockito:mockito-inline:3.8.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.0') {
        // Fixes warning about multiple occurrences of JSONObject on the classpath
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
}

// We use Spring Boot gradle plugin in a non-Spring Boot environment to manage Spring Boot dependency.
// Disable bootJar and enable jar task back since this is actually not a Spring Boot app.
bootJar {
    enabled = false
}

jar {
    enabled = true
}

// Modify the standard :test task to only include unit-tagged and library-tagged tests.
test {
    useJUnitPlatform {
        includeTags "unit", "library"
    }
}

task unitTest(type: Test) {
    useJUnitPlatform {
        includeTags "unit"
    }
    outputs.upToDateWhen { false }
}

// Create a new :integrationTest task to run integration tests. This won't be executed as
// part of the standard `./gradlew build` invocation.
task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    shouldRunAfter test
    // Force tests to always be re-run, since integration tests involve communicating with external
    // resources.
    outputs.upToDateWhen { false }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'terra-landing-zone-service' 
        property 'sonar.projectKey', 'DataBiosphere_terra-landing-zone-service'
        property 'sonar.organization', 'broad-databiosphere'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

liquibase {
    activities {
        catalog {
            changeLogFile 'src/main/resources/db/changelog.xml'
            url 'jdbc:postgresql://localhost:5432/landingzone_db'
            username 'dbuser'
            password 'dbpwd'
            logLevel 'info'
        }
    }
}
