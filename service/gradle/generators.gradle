dependencies {
    implementation 'io.swagger.core.v3:swagger-annotations'
    runtimeOnly 'org.webjars.npm:swagger-ui-dist:4.5.0'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli'

    // Versioned by Spring:
    implementation 'javax.validation:validation-api'
    implementation 'org.webjars:webjars-locator-core'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

def artifactGroup = "${group}.lz.futureservice"

generateSwaggerCode {
    inputFile = file('src/main/resources/api/service_openapi.yaml')
    language = 'spring'
    components = ['models', 'apis']
    // For Swagger Codegen v3 on Java 16+
    // See https://github.com/swagger-api/swagger-codegen/issues/10966
    jvmArgs = ['--add-opens=java.base/java.util=ALL-UNNAMED']
    additionalProperties = [
            modelPackage     : "${artifactGroup}.generated.model",
            apiPackage       : "${artifactGroup}.generated.api",
            dateLibrary      : 'java11',
            java8            : true,
            interfaceOnly    : 'true',
            useTags          : 'true',
            springBootVersion: dependencyManagement.managedVersions['org.springframework.boot:spring-boot']
    ]
}

String swaggerOutputSrc = "${generateSwaggerCode.outputDir}/src/main/java"

idea.module.generatedSourceDirs = [file(swaggerOutputSrc)]
sourceSets.main.java.srcDir swaggerOutputSrc
compileJava.dependsOn generateSwaggerCode
//why this is required?
spotlessJava.dependsOn generateSwaggerCode

// see https://github.com/n0mer/gradle-git-properties
gitProperties {
    keys = []
    gitPropertiesName = "version.properties"
    customProperty('landingzone.version.gitTag', { it.describe(tags: true) })
    customProperty('landingzone.version.gitHash', { it.head().abbreviatedId })
    customProperty('landingzone.version.github', { "https://github.com/DataBiosphere/terra-landing-zone-service/tree/${it.describe(tags: true)}" })
    customProperty('landingzone.version.build', version)
}
