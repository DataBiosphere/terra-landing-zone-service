plugins {
    id 'bio.terra.landingzone.java-spring-app-conventions'
}

dependencies {
    implementation (project(":library")) {
        // the msal4j transitive dependency is still pulling in an old version of json-smart
        // which is vulnerable to CVE-2023-1370
        // see https://github.com/AzureAD/microsoft-authentication-library-for-java/issues/611
        exclude group: 'net.minidev', module: 'json-smart'
    }
    implementation 'net.minidev:json-smart:2.5.0'

    implementation 'bio.terra:terra-common-lib'
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.retry:spring-retry'

    testImplementation 'org.apache.commons:commons-lang3:3.14.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
        exclude group: 'net.minidev', module: 'json-smart'
    }
    testImplementation group: "org.hamcrest", name: "hamcrest", version: "2.2"

    // Allows us to mock final classes
    testImplementation 'org.mockito:mockito-inline:5.2.0'

    jacocoTestReport {
        dependsOn(':library:compileTestJava')
        reports {
            // sonarqube requires XML coverage output to upload coverage data
            xml.required = true
            html.required = true
        }

        additionalSourceDirs.from = files("$rootDir/library/src")
        additionalClassDirs.from = files("$rootDir/library/build/classes")
    }

    test {
        useJUnitPlatform {
            includeTags "library","unit"
        }
        outputs.upToDateWhen { false }
        finalizedBy jacocoTestReport
        jacoco {
            includes = ["bio.terra.landingzone.**" ]
            includeNoLocationClasses = true
        }
    }

    // Create a new :integrationTest task to run integration tests. This won't be executed as
    // part of the standard `./gradlew build` invocation.
    task integrationTest(type: Test) {
        useJUnitPlatform {
            includeTags "integration"
        }
        shouldRunAfter test
        // Force tests to always be re-run, since integration tests involve communicating with external
        // resources.
        outputs.upToDateWhen { false }
    }
}
